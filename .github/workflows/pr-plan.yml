name: Create Terraform Plan on each PR
on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS
        run: |
          export AWS_ROLE_ARN=arn:aws:iam::718665970908:role/e-mobility-github-actions
          export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
          export AWS_DEFAULT_REGION=eu-central-1

          echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
          echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
          echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV

          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.7

      - uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        run: |
          terraform version
          cp ./backend/remote-backend-config-dev.tf .
          terraform init
          bash scripts/init-workspace.sh dev
          terraform workspace select dev

      - name: Terraform plan
        id: plan
        run: |
          terraform plan -var-file=tfvars/dev.tfvars -input=false
        continue-on-error: true

#      - name: Update Pull Request
#        uses: actions-ecosystem/action-create-comment@v1
#        env:
#          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          body: |
#            Hello, @${{ github.actor }}!

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

